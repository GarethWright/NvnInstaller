This sample is crearted using Visual Studio C++ 2008 express. 

Steps to create Win 32 DLL

1. Start Visual Studio C++ 2008 express
2. Click menu File >> New >> Project
3. Select Project type "Win32" and "Win32 Project" from project templates. Enter "Win32DLL" for the project name and click OK.
4. Click "Next" in Win 32 Application Wizard. In the second window select "DLL" as application type and CHECK "Export symbols" under additional options. Click "Finish"
5. I delete some of the code created by Visual Studio to keep this sample simple. 

Delete following code in Win32DLL.cpp i.e delete everything in Win32DLL.cpp

#include "stdafx.h"
#include "Win32DLL.h"

// This is an example of an exported variable
WIN32DLL_API int nWin32DLL=0;

// This is an example of an exported function.
WIN32DLL_API int fnWin32DLL(void)
{
	return 42;
}

// This is the constructor of a class that has been exported.
// see Win32DLL.h for the class definition
CWin32DLL::CWin32DLL()
{
	return;
}


and following code in Win32DLL.h

// This class is exported from the Win32DLL.dll
class WIN32DLL_API CWin32DLL {
public:
	CWin32DLL(void);
	// TODO: add your methods here.
};

extern WIN32DLL_API int nWin32DLL;

WIN32DLL_API int fnWin32DLL(void);

6. Add following code in Win32DLL.cpp to create "test" directory in "D:"

#include "stdafx.h"
#include <direct.h>
#include <windows.h>
#include <msi.h> 

UINT __stdcall SamplesAction(MSIHANDLE hInstall)
{
	mkdir("d:\\test");
	return 0;
}

7. Right click project and select "Properties".
8. Set "Character Set" to "Not Set". This property appears under "Configuration Properties" >> "General".

This also needs DEF(Module Definition File) file. But Visual Studio C++ 2008 Express does not come with DEF template. But it is just a simple text file. Follow the following steps to create DEF file and using it with our sample DLL (Win32DLL)

1. Right click on project and select "Add">>"New Item".
2. Select "Code" under "Categories" and select "C++ File(.cpp)" under templates. Name it "Sample.def".
3. Add following code to Sample.def file

LIBRARY	"Win32Dll"
EXPORTS
    SamplesAction

4. Now change a property to use this DEF file with our DLL. Right click on project and select "Properties". Expand "Linker" under "Configuration Properties". Set "Sample.def" [without quotes around it] for "Module Definition File". Click OK

Now compile this project(Build >> Rebuild Solution). Our DLL is ready !

Using Win32 DLL with Nvn Installer.

1. Start Nvn Installer.
2. Set all necessory properties in "Product Information" tab.
5. Select "Custom Actions" tab. 
6. Select Dll (default value) for custom action type and click "Add Custom Action".
If DLL is one of the file being installed
	A. Select "Components" tab (left side)
	B. Set Destination folder and add above DLL file under it.
	C. Select "True" for "Is part of installation".
	D. Now Click "..." which shows components under destination folder.
	E. Select DLL file in popup window.
If custom action DLL is a binary file (which is cleaned by windows installer after installation). 
	A. Select "False" for "Is part of installation".
	D. Now Click "..." which shows normal file select dialog. Locate custom action DLL which we created above.
7. Set "SamplesAction" (without quotes aroung it) for DLL Entry.
8. Select appropriate value for "When?", for example "Installation" if you want to execute this custom action only during installation. Go to http://www.nvninstaller.com/help/customactions/dll-custom-actions to know more about it.
9.  Select menu Project >> Build or Press F5 to build MSI package.

Now execute the setup package generated by Nvn Installer and check whether "test" directory is created in "D:" after installation.


Security Note

This sample is provided to illustrate a concept and should not be used in applications or Web sites. Naveen Hegde, author of Nvn Installer assumes no liability for incidental or consequential damages should the sample be used for purposes other than as intended.